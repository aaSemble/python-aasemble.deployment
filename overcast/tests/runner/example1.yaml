main:
# Sometimes, the userdata needs to be generated first
  - shell: 
      cmd: "build_scripts/make_userdata.sh > userdata.txt"

# ...and then it can be used here
  - provision:
      stack: environment/full.yaml
      userdata: userdata.txt

# After a provision step, commands can be run on provisioned nodes
  - shell:
      type: remote
      node: bootstrap1
      cmd: "python -m jiocloud.orchestrate ping"
      retry-if-fails: true
      total-timeout: 20m
      retry-wait: 5s
  - shell: 
      type: remote
      node: bootstrap1
      cmd: "python -m jiocloud.orchestrate trigger_update ${DEPLOY_ID}"
      retry-if-fails: true
      total-timeout: 10m
      retry-wait: 5s

# After a provision step, an environment variable called ALL_NODES
# is set which contains a space delimited list of nodes
  - shell: 
      type: remote
      node: bootstrap1
      cmd: 'echo "${ALL_NODES}" | tr " " "\n" | python -m jiocloud.orchestrate verify_hosts ${DEPLOY_ID}'
      retry-if-fails: true
      total-timeout: 50m
      retry-wait: 5s
  - shell: 
      type: remote
      node: bootstrap1
      cmd: "python -m jiocloud.orchestrate check_single_version -v ${DEPLOY_ID}"
      retry-if-fails: true
      total-timeout: 40m
      retry-wait: 5s
  - shell: 
      type: remote
      node: bootstrap1
      cmd: "python -m jiocloud.orchestrate get_failures --hosts"
      retry-if-fails: true
      total-timeout: 10m
      retry-wait: 5s
